# Generated automatically from Makefile.in by configure.
#  Copyright (c) 1993 - 2002 CENA, Patrick Lecoanet --
#
# This code is free software; you can redistribute it and/or
# modify it under the terms of the GNU Library General Public
# License as published by the Free Software Foundation; either
# version 2 of the License, or (at your option) any later version.
#
# This code is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Library General Public License for more details.
#
# You should have received a copy of the GNU Library General Public
# License along with this code; if not, write to the Free
# Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
#
# $Revision: 1.2 $
#
srcdir = ..

SHELL = /bin/sh

# Visual Studio 6 default
TOOLS32		= C:\Progra~1\Microsoft Visual Studio\VC98
CC		= "$(TOOLS32)\bin\cl.exe"
LD		= "$(TOOLS32)\bin\link.exe" -link50compat
libpath32	= /LIBPATH:"$(TOOLS32)\lib"
include32	= /I"$(TOOLS32)\include"
CP		= copy
RM		= del

PERLCONFIG = INSTALLDIRS=perl

INSTALL_PERL = install_perl

prefix = c:\lecoanet
exec_prefix = $(prefix)

bindir = $(exec_prefix)\bin
libdir = $(exec_prefix)\lib
incdir = $(prefix)\include
mandir = $(prefix)\man\man3

windir = $(srcdir)\win
genericdir = $(srcdir)\generic
tessdir = $(srcdir)\libtess
tmpdir = $(srcdir)

tcl_inc_dir = $(prefix)\tcl8.4.2
tk_inc_dir = $(prefix)\tk8.4.2
INCLUDES    = /I$(srcdir)/generic /I$(srcdir)/libtess $(include32)

TCL_TK_VER = 84
# Assume that WISH is already INSTALLED
TCLSH		= $(bindir)\tclsh$(TCL_TK_VER)
WISH		= $(bindir)\wish$(TCL_TK_VER)
WIN_LIBS	= user32.lib gdi32.lib ws2_32.lib
#GL_LIBS	=
GL_LIBS		= opengl32.lib
PTKROOT		= c:\perl\site\lib
TKLIBS		= $(libdir)\tcl$(TCL_TK_VER).lib \
		  $(libdir)\tk$(TCL_TK_VER).lib \
		  $(GL_LIBS) $(WIN_LIBS)
PTKLIBS		= $(PTKROOT)\auto\Tk\Tk.lib $(GL_LIBS) $(WIN_LIBS)

MAJOR=3
MINOR=2
PATCHLVL = 91
VERSION = \"$(MAJOR).$(MINOR).$(PATCHLVL)\"

#
# Recognized compilation time flags are :
#
#	PROFILE			ask for profile support
#	OM			include code for internal overlap manager
#	GL			include code that need GL support.
#	GL_PRINT_CONFIG	display the detected hardware capabilities
#	GL_DAMAGE		redraw only modified areas
#	SHAPE			include code for reshaping windows.
#
DFLAGS= /DOM /DGL /DGL_DAMAGE /DGL_PRINT_CONFIG
#DFLAGS= /DOM
#DFLAGS = /DTCL_MEM_DEBUG

# Max speed
#CDEBUG = -O2 -Gs
# Debug
CDEBUG = -Z7 -Od
CFLAGS = /c /W3 /nologo /YX $(CDEBUG) /D__STDC__ /DVERSION=$(VERSION) /DDLL_BUILD /DBUILD_Tkzinc $(DFLAGS)
TKCPPFLAGS = /Fp$(tmpdir)\ $(INCLUDES) /I"$(incdir)" /I$(tk_inc_dir)\generic /I$(tk_inc_dir)\win /I$(tcl_inc_dir)\generic /I$(tcl_inc_dir)\win
PTKCPPFLAGS = /DPTK /Fp$(tmpdir)\ $(INCLUDES) /I$(PTKROOT)\Tk\pTk /I$(PTKROOT)\Tk

LFLAGS	= /nologo /machine:IX86 /warn:3 $(libpath32) /FORCE:MULTIPLE /NODEFAULTLIB:uuid.lib /NODEFAULTLIB:OLDNAMES.lib

DLLENTRY = @12
DLLLFLAGS = $(LFLAGS) /entry:_DllMainCRTStartup$(DLLENTRY) /dll

TKDLLOBJS = $(tmpdir)\Track.obj $(tmpdir)\Tabular.obj \
	$(tmpdir)\Reticle.obj $(tmpdir)\Map.obj \
	$(tmpdir)\Rectangle.obj $(tmpdir)\Arc.obj \
	$(tmpdir)\Curve.obj $(tmpdir)\Item.obj  \
#	$(tmpdir)\PostScript.obj $(tmpdir)\perfos.obj \
	$(tmpdir)\MapInfo.obj $(tmpdir)\Attrs.obj \
	$(tmpdir)\Draw.obj $(tmpdir)\Geo.obj \
	$(tmpdir)\List.obj $(tmpdir)\Transfo.obj \
	$(tmpdir)\Group.obj $(tmpdir)\Icon.obj \
	$(tmpdir)\Text.obj $(tmpdir)\Color.obj \
	$(tmpdir)\Field.obj $(tmpdir)\Triangles.obj \
	$(tmpdir)\Window.obj $(tmpdir)\tkZinc.obj \
	$(tmpdir)\OverlapMan.obj $(tmpdir)\WinPort.obj \
	$(tmpdir)\Image.obj $(tmpdir)\dict.obj $(tmpdir)\geom.obj \
	$(tmpdir)\memalloc.obj $(tmpdir)\mesh.obj $(tmpdir)\normal.obj \
	$(tmpdir)\priorityq.obj $(tmpdir)\render.obj \
	$(tmpdir)\sweep.obj $(tmpdir)\tess.obj $(tmpdir)\tessmono.obj

PTKDLLOBJS = $(tmpdir)\Track.obj $(tmpdir)\Tabular.obj \
	$(tmpdir)\Reticle.obj $(tmpdir)\Map.obj \
	$(tmpdir)\Rectangle.obj $(tmpdir)\Arc.obj \
	$(tmpdir)\Curve.obj $(tmpdir)\Item.obj \
#	$(tmpdir)\PostScript.obj $(tmpdir)\perfos.obj \
	$(tmpdir)\MapInfo.obj $(tmpdir)\Attrs.obj $(tmpdir)\Draw.obj \
	$(tmpdir)\Geo.obj $(tmpdir)\List.obj $(tmpdir)\Transfo.obj \
	$(tmpdir)\Group.obj $(tmpdir)\Icon.obj $(tmpdir)\Text.obj \
	$(tmpdir)\Color.obj $(tmpdir)\Field.obj $(tmpdir)\Triangles.obj \
	$(tmpdir)\Window.obj $(tmpdir)\tkZinc.obj $(tmpdir)\OverlapMan.obj \
	$(tmpdir)\WinPort.obj $(tmpdir)\Image.obj

DLL=Tkzinc$(MAJOR)$(MINOR)$(PATCHLVL).dll
PTKAR=ptkzinc.lib

$(srcdir)/$(DLL): $(TKDLLOBJS)
	$(LD) $(DLLLFLAGS) $(TKLIBS) /OUT:$@ $(TKDLLOBJS)
	@"$(WISH)" <<
	package require Tk
	pkg_mkIndex -load Tk $(srcdir) $(DLL)
	exit
<<

$(srcdir)/$(PTKAR): $(PTKDLLOBJS)
	LIB $(PTKDLLOBJS) /OUT:$@

{$(windir)}.c{$(tmpdir)}.obj:
	$(CC) $(TKCPPFLAGS) $(CFLAGS) -Fo$(tmpdir)\ $<

{$(genericdir)}.c{$(tmpdir)}.obj:
	$(CC) $(TKCPPFLAGS) $(CFLAGS) -Fo$(tmpdir)\ $<

{$(tessdir)}.c{$(tmpdir)}.obj:
	$(CC) $(TKCPPFLAGS) $(CFLAGS) -Fo$(tmpdir)\ $<

{$(windir)}.c{$(ptmpdir)}.obj:
	$(CC) $(PTKCPPFLAGS) $(CFLAGS) -Fo$(ptmpdir)\ $<

{$(genericdir)}.c{$(ptmpdir)}.obj:
	$(CC) $(PTKCPPFLAGS) $(CFLAGS) -Fo$(ptmpdir)\ $<

mostlyclean:
	$(RM) *.bak *~ $(tmpdir)\*.obj
clean:
	$(RM) $(tmpdir)\*.obj $(tmpdir)\*.dll $(tmpdir)\*.lib $(tmpdir)\*.exp $(tmpdir)\pkgIndex.tcl $(tmpdir)\*.pch
